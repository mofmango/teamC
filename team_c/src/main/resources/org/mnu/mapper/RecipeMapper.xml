<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.mnu.mapper.RecipeMapper">

   <select id="getList" resultType="org.mnu.domain.RecipeVO">
        SELECT r.*, m.username as writerName
        FROM TBL_RECIPE r JOIN TBL_MEMBER m ON r.writer = m.userid
        <where>
            <if test="tag != null and tag != ''">
                r.bno IN (SELECT bno FROM TBL_RECIPE_TAG WHERE tagName = #{tag})
            </if>
            
            <if test="type != null and keyword != null and keyword != ''">
                <trim prefix="AND (" suffix=")" prefixOverrides="OR">
                    <choose>
                        <when test="type == 'T'.toString()">
                            r.title LIKE '%' || #{keyword} || '%'
                        </when>
                        <when test="type == 'W'.toString()">
                            m.username LIKE '%' || #{keyword} || '%'
                        </when>
                        <when test="type == 'G'.toString()">
                            r.bno IN (SELECT bno FROM TBL_RECIPE_TAG WHERE tagName LIKE '%' || LTRIM(#{keyword}, '#') || '%')
                        </when>
                    </choose>
                </trim>
            </if>
        </where>
        <choose>
            <when test="sort == 'likes'">
                ORDER BY r.like_count DESC, r.bno DESC
            </when>
            <otherwise>
                ORDER BY r.bno DESC
            </otherwise>
        </choose>
    </select>
	
	<!--
    <insert id="create">
        <selectKey keyProperty="bno" order="BEFORE" resultType="long">
            SELECT seq_recipe.nextval FROM DUAL
        </selectKey>
        INSERT INTO TBL_RECIPE (bno, title, writer, image_path)
        VALUES (
            #{bno}, 
            #{title}, 
            #{writer},
            #{image_path, jdbcType=VARCHAR}
        )
    </insert>
    -->
    <insert id="create">
	    <selectKey keyProperty="bno" order="BEFORE" resultType="long">
	        SELECT seq_recipe.nextval FROM DUAL
	    </selectKey>
	    INSERT INTO TBL_RECIPE (bno, title, writer, image_path, ingredients)
	    VALUES (
	        #{bno}, 
	        #{title}, 
	        #{writer},
	        #{image_path, jdbcType=VARCHAR},
	        #{ingredients, jdbcType=CLOB}
	    )
	</insert>
	

    <select id="read" resultType="org.mnu.domain.RecipeVO">
        SELECT r.*, m.username as writerName
        FROM TBL_RECIPE r JOIN TBL_MEMBER m ON r.writer = m.userid
        WHERE r.bno = #{bno}
    </select>
	<!-- 
    <update id="update">
        UPDATE TBL_RECIPE
        SET title = #{title},
            updatedate = sysdate,
            image_path = #{image_path, jdbcType=VARCHAR}
        WHERE bno = #{bno}
    </update>
     -->
    <update id="update">
	    UPDATE TBL_RECIPE
	    SET title = #{title},
	        updatedate = sysdate,
	        image_path = #{image_path, jdbcType=VARCHAR},
	        ingredients = #{ingredients, jdbcType=CLOB}
	    WHERE bno = #{bno}
	</update>
    
    
    <delete id="delete">
        DELETE FROM TBL_RECIPE WHERE bno = #{bno}
    </delete>
    
    <select id="getListByWriter" resultType="org.mnu.domain.RecipeVO">
        SELECT r.*, m.username as writerName
        FROM TBL_RECIPE r JOIN TBL_MEMBER m ON r.writer = m.userid
        WHERE r.writer = #{writer} 
        ORDER BY r.bno DESC
    </select>
    
    <select id="getBookmarksByUser" resultType="org.mnu.domain.RecipeVO">
        SELECT T2.*, M.username as writerName
        FROM TBL_BOOKMARK T1 
        JOIN TBL_RECIPE T2 ON T1.bno = T2.bno
        JOIN TBL_MEMBER M ON T2.writer = M.userid
        WHERE T1.userid = #{userid}
        ORDER BY T2.bno DESC
    </select>
    
    <select id="getLikesByUser" resultType="org.mnu.domain.RecipeVO">
        SELECT T2.*, M.username as writerName
        FROM TBL_LIKE T1 
        JOIN TBL_RECIPE T2 ON T1.bno = T2.bno
        JOIN TBL_MEMBER M ON T2.writer = M.userid
        WHERE T1.userid = #{userid}
        ORDER BY T2.bno DESC
    </select>
    
    <update id="updateLikeCount">
        UPDATE TBL_RECIPE SET like_count = like_count + #{amount} WHERE bno = #{bno}
    </update>
     
    <select id="countByWriter" resultType="int">
        SELECT COUNT(*) FROM TBL_RECIPE WHERE writer = #{writer}
    </select>
    <select id="countBookmarksByUser" resultType="int">
        SELECT COUNT(*) FROM TBL_BOOKMARK WHERE userid = #{userid}
    </select>
    <select id="countLikesByUser" resultType="int">
	    SELECT COUNT(*) FROM TBL_LIKE WHERE userid = #{userid}
	</select>
	  
	<select id="findByIngredients" resultType="org.mnu.domain.RecipeVO">
	    SELECT r.*, m.username as writerName, COUNT(rt.tagName) as match_count
	    FROM TBL_RECIPE r
	    JOIN TBL_MEMBER m ON r.writer = m.userid
	    JOIN TBL_RECIPE_TAG rt ON r.bno = rt.bno
	    WHERE rt.tagName IN
	    <foreach item="item" index="index" collection="ingredientList" open="(" separator="," close=")">
	        #{item}
	    </foreach>
	    GROUP BY r.bno, r.title, r.writer, r.image_path, r.like_count, r.tags, r.regdate, r.updatedate, m.username
	    ORDER BY match_count DESC, r.like_count DESC
	</select>

</mapper>